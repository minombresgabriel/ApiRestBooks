openapi: 3.0.0
info:
  title: Books API
  description: API para gestión de libros, usuarios y administración
  version: 1.0.0

servers:
  - url: http://localhost:5000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /api/auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: Usuario registrado exitosamente

  /api/auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login exitoso

  /api/auth/logout:
    post:
      summary: Cerrar sesión
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logout exitoso

  /api/admin/admin-data:
    get:
      summary: Obtener datos de administrador
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Solo los administradores pueden ver esto

  /api/books:
    get:
      summary: Obtener todos los libros
      tags: [Books]
      responses:
        "200":
          description: Lista de libros

    post:
      summary: Crear un libro
      tags: [Books]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                description:
                  type: string
                publishedYear:
                  type: integer
      responses:
        "201":
          description: Libro creado exitosamente

  /api/books/{id}:
    get:
      summary: Obtener libro por ID
      tags: [Books]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Libro encontrado

    put:
      summary: Actualizar libro
      tags: [Books]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                description:
                  type: string
                publishedYear:
                  type: integer
      responses:
        "200":
          description: Libro actualizado

    delete:
      summary: Eliminar libro
      tags: [Books]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Libro eliminado

  /api/users:
    get:
      summary: Obtener todos los usuarios
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de usuarios

  /api/users/{id}/role:
    patch:
      summary: Cambiar rol de usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        "200":
          description: Rol actualizado

  /api/users/{id}:
    delete:
      summary: Eliminar usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado

    put:
      summary: Actualizar usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        "200":
          description: Usuario actualizado

  /api/users/{id}/password:
    put:
      summary: Actualizar contraseña del usuario
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Contraseña actualizada
